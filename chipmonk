#!/bin/bash

# # # Chipmonk
# # # Author: Marshall Whittaker / oxagast
# # # Version: 2.0a
# # # NUT (Network UPS Tools) Visual Power Dialog

# Here you can change the location where Chipmonk will log to.
logloc=/var/log/nut

# The below three functions are for adding user defined scripts!
# I recommend leaving ther placeholders where they are, they are
# innoculous, but the script doesn't work correctly without them
# if nothing else is in the brackets.

function line_power()
{
:
}

function on_battery()
{
:
}

function low_battery()
{
:
}

# Primary functions start here

# Called by trap on a shutdown signal
function clean_up()
{
  echo "Running cleanup, killing upslog..."
  pkill upslog
  rm /tmp/ups.status.$pid
}

# This is for starting and logging things to our log location (default /var/log/nut/)
function log_ups()
{
  long_format='%host% %upshost% %time @Y-@M-@d @H:@M% STA:%VAR ups.status% CRG:%VAR battery.charge% INP:%VAR input.voltage% LOD:%VAR ups.load% TMP:%VAR ups.temperature%'
  state='%VAR ups.status%'
  if [[ -d $logloc ]]; then
    touch "$logloc/ups.log"
    if [[ -f "$logloc/ups.log" ]]; then
      upslog -l "$logloc/ups.log" -s $model -f "$long_format"
    else
      echo "Your $logloc is not writable by you."
    fi
  fi
  upslog -l /tmp/ups.status.$pid -s $model -f "$state"
}

# Calls kdialog on UPS state changes
function popup()
{
  trap clean_up EXIT
  f="/tmp/ups.status.$pid"
  powerline=$(<"$f")
  inotifywait -m -e modify "$f" --format "%e" | while read -r event 2>/dev/null; do
    if [ "$event" == "MODIFY" ]; then
      prev="$powerline"
      powerline=$(cat "$f" | tail -n 1)
      if [[ "$powerline" != "$prev" ]]; then
        if [[ $last != $powerline ]]; then
          if [[ $powerline == "OL" ]]; then kdialog --icon "gpm-ups-000-charging" --passivepopup "Notice: UPS $model now on line power." 30; line_power; fi
          if [[ $powerline == "OB" ]]; then kdialog --icon "gpm-ups-040" --passivepopup "Warning: UPS $model now on battery power." 30; on_battery; fi
          if [[ $powerline == "LB" ]]; then kdialog --icon "gpm-ups-020" --passivepopup "Critical: UPS $model now has a low battery!" 30; low_battery; fi
        fi
        last=$powerline
      fi
    fi
  done
}

# startup and config initilization
echo "# # # Chipmonk # # #"
echo "NUT (Network UPS Tools) Visual Power Dialogs"
echo "Author: Marshall Whittaker / oxagast"
logperm=2
pid=$$
if [[ "$#" -gt 1 ]]; then
  echo "You need to specify the NUT configured UPS model@hostname: "
  echo "    ./chipmonk.sh SK600@jerkon"
  exit 1
fi
if [[ "$#" -eq 0 ]]; then
  model=$(grep "[MODEL]" -A 1 ~/.chipmonk | tail -n 1 | tr -d '\n')
  if [ $(echo $model | grep ".@." | wc -l) -eq 1 ]; then
    log_ups
    popup
  fi
else
  if [[ "$#" -eq 1 ]]; then
    model=$1
    if [ $(echo $model | grep ".@." | wc -l) -eq 1 ]; then
      echo "[MODEL]" >~/.chipmonk
      echo $model >>~/.chipmonk
      log_ups
      popup
    fi
  fi
  echo "You need to specify the NUT configured UPS model@hostname: "
  echo "    ./chipmonk.sh SK600@jerkon"
  exit 1
fi
